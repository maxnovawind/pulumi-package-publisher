name: 'Hello World'
description: 'Greet someone'
inputs:
#  provider-repo:
#    description: Target provider
#    required: true
#    default: ''
#  pypi-password:  
#    description: PyPi password
#    required: true
#    default: ''
#  python-version:
#    description: Python version
#    required: true
#    default: "3.9"
#  java-version:
#    description: Java version
#    required: true
#    default: "11"
#  node-version:
#    description: Node version
#    required: true
#    default: "16.x"
#  go-version:
#    description: Go version
#    required: true
#    default: "1.20.1"
  # dotnet-version:
  #   description: Dotnet version
  #   required: true
  #   default: |
  #   "6.0.x"
  #   "3.1.301"

runs:
  using: "composite"
  steps:
    - name: Verify versions
      run: echo ${{ env.GOVERSION }} \
        echo ${{ env.NODEVERSION }} \
        echo ${{ env.DOTNETVERSION }} \
        echo ${{ env.PYTHONVERSION }}
      shell: bash
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.repository.name }}
    - name: Checkout Scripts Repo
      uses: actions/checkout@v3
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
      shell: bash
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GOVERSION }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.5.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@v2
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODEVERSION }}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNETVERSION }}
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHONVERSION }}
    - name: Download python SDK
      uses: actions/download-artifact@v2
      with:
        name: python-sdk.tar.gz
        path: ${{ github.workspace }}/sdk/
    - name: Uncompress python SDK
      run: tar -zxf ${{ github.workspace }}/sdk/python.tar.gz -C
        ${{ github.workspace }}/sdk/python
      shell: bash
    - name: Download dotnet SDK
      uses: actions/download-artifact@v2
      with:
        name: dotnet-sdk.tar.gz
        path: ${{ github.workspace }}/sdk/
    - name: Uncompress dotnet SDK
      run: tar -zxf ${{ github.workspace }}/sdk/dotnet.tar.gz -C
        ${{ github.workspace }}/sdk/dotnet
      shell: bash
    - name: Download nodejs SDK
      uses: actions/download-artifact@v2
      with:
        name: nodejs-sdk.tar.gz
        path: ${{ github.workspace }}/sdk/
    - name: Uncompress nodejs SDK
      run: tar -zxf ${{ github.workspace }}/sdk/nodejs.tar.gz -C
        ${{ github.workspace }}/sdk/nodejs
      shell: bash
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        cache: gradle
        distribution: temurin
        java-version: ${{ env.JAVAVERSION }}
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: "7.6"
    - name: Download java SDK
      uses: actions/download-artifact@v2
      with:
        name: java-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress java SDK
      run: tar -zxf ${{github.workspace}}/sdk/java.tar.gz -C
        ${{github.workspace}}/sdk/java
      shell: bash
    - name: Install Twine
      run: python -m pip install pip twine
      shell: bash
    - name: Publish Node, Python, Dotnet SDKs
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: ./ci-scripts/ci/publish-tfgen-package ${{ github.workspace }}
      shell: bash
    - name: Set PACKAGE_VERSION to Env
      run: echo "PACKAGE_VERSION=$(pulumictl get version --language generic)" >>
        $GITHUB_ENV
      shell: bash
    - name: Publish Java SDK
      uses: gradle/gradle-build-action@9b814496b50909128c6a52622b416c5ffa04db49
      with:
        arguments: publishToSonatype closeAndReleaseSonatypeStagingRepository
        build-root-directory: ./sdk/java
        gradle-version: 7.4.1
    - if: failure() && github.event_name == 'push'
      name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        author_name: Failure in publishing SDK
        fields: repo,commit,author,action
        status: ${{ job.status }}
