name: 'Hello World'
description: 'Greet someone'
inputs:
  provider-repo:
    description: Target provider
    required: true
    default: ''
  pypi-password:  
    description: PyPi password
    required: true
    default: ''
  python-version:
    description: Python version
    required: true
    default: "3.9"
  java-version:
    description: Java version
    required: true
    default: "11"
  node-version:
    description: Node version
    required: true
    default: "16.x"
  go-version:
    description: Go version
    required: true
    default: "1.20.1"
  # dotnet-version:
  #   description: Dotnet version
  #   required: true
  #   default: |
  #   "6.0.x"
  #   "3.1.301"

outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        repository: pulumi/${{ inputs.provider-repo }}
    - name: Checkout Scripts Repo
      uses: actions/checkout@v3
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
      shell: bash
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.1
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.5.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@v2
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ inputs.node-version }}
        registry-url: https://registry.npmjs.org
    # - name: Setup DotNet
    #   uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: ${{ inputs.dotnet-version }}
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python-version }}
    - name: Download python SDK
      uses: actions/download-artifact@v2
      with:
        name: python-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress python SDK
      run: tar -zxf ${{github.workspace}}/sdk/python.tar.gz -C
        ${{github.workspace}}/sdk/python
      shell: bash
    - name: Download dotnet SDK
      uses: actions/download-artifact@v2
      with:
        name: dotnet-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress dotnet SDK
      run: tar -zxf ${{github.workspace}}/sdk/dotnet.tar.gz -C
        ${{github.workspace}}/sdk/dotnet
      shell: bash
    - name: Download nodejs SDK
      uses: actions/download-artifact@v2
      with:
        name: nodejs-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress nodejs SDK
      run: tar -zxf ${{github.workspace}}/sdk/nodejs.tar.gz -C
        ${{github.workspace}}/sdk/nodejs
      shell: bash
    - run: python -m pip install pip twine
      shell: bash
    # - env:
    #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # name: Publish SDKs
      # run: ./ci-scripts/ci/publish-tfgen-package ${{ github.workspace }}
      # shell: bash
